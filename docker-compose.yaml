services:
  app:
    build: .
    depends_on:
      - edgedb
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set myminio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} && \
      mc mb myminio/${BUCKET_NAME} || true
      "
    networks:
      - app-network

  edgedb:
    image: edgedb/edgedb:latest
    environment:
      # Set a strong password for the 'edgedb' user
      EDGEDB_SERVER_PASSWORD: "${EDGEDB_PASSWORD}"
      # Generate a self-signed TLS certificate
      EDGEDB_SERVER_TLS_CERT_MODE: "generate_self_signed"
      # Automatically apply migrations on startup
      EDGEDB_SERVER_MIGRATE_ON_START: "1"
    volumes:
      - "./dbschema:/dbschema:ro" # Read-only mount of the dbschema directory
      - "edgedb-data:/var/lib/edgedb/data"
    ports:
      - "${EDGEDB_PORT}:${EDGEDB_PORT}"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  edgedb-data:
  minio-data:
